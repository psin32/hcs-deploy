version: '3'

services:
  mongo1:
    image: mongo
    hostname: mongo1
    ports:
      - "27017:27017"
    command: mongod --replSet commercers
    networks:
      - overlay

  mongo2:
    image: mongo
    hostname: mongo2
    ports:
      - "27018:27017"
    command: mongod --replSet commercers
    networks:
      - overlay

  mongo3:
    image: mongo
    hostname: mongo3
    ports:
        - "27019:27017"
    command: mongod --replSet commercers
    networks:
      - overlay

  data-setup:
    image: psingh4321/hcs-data-setup
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    environment: 
      - MONGO1=mongo1
      - MONGO2=mongo1
      - MONGO3=mongo1
      - RS=commercers
    deploy:
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: none
        delay: 15s
        max_attempts: 4
    networks:
      - overlay

  db-users:
    image: psingh4321/users-db
    hostname: db-users
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=mysqluser
      - MYSQL_PASSWORD=mysqlpw
    networks:
      - overlay

  hcs-ui:
    image: psingh4321/hcs-ui
    hostname: hcs-ui
    ports:
      - "80:5000"
    networks:
      - overlay

  hcs-eureka:
    image: psingh4321/hcs-eureka
    hostname: hcs-eureka
    ports:
      - "8001:8001"
    networks:
      - overlay

  hcs-zuul:
    image: psingh4321/hcs-zuul
    hostname: hcs-zuul
    ports:
      - "8000:8000"
    networks:
      - overlay

  hcs-catalog:
    image: psingh4321/hcs-catalog
    hostname: hcs-catalog
    ports:
      - "8090:8090"
    networks:
      - overlay

  hcs-users:
    image: psingh4321/hcs-users
    hostname: hcs-users
    ports:
      - "8080:8080"
    networks:
      - overlay

  zookeeper:
    image: confluentinc/cp-zookeeper:4.0.0
    hostname: zookeeper
    ports:
      - "2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - overlay

  kafka:
    image: confluentinc/cp-kafka:4.0.0
    hostname: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092"
    environment:
      KAFKA_kafka_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:9092'
    deploy:
      placement:
        constraints:
          - node.role == manager
    networks:
      - overlay

  schema-registry:
    image: confluentinc/cp-schema-registry:4.0.0
    hostname: schema-registry
    depends_on:
      - zookeeper
      - kafka
    ports:
      - "8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'
      SCHEMA_REGISTRY_LISTENERS: http://schema-registry:8081
    networks:
      - overlay

  kafka-rest:
    image: confluentinc/cp-kafka-rest:4.0.0
    hostname: kafka-rest
    depends_on:
      - zookeeper
      - kafka
      - schema-registry
    ports:
      - "8082:8082"
    environment:
      KAFKA_REST_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_REST_LISTENERS: http://kafka-rest:8082
      KAFKA_REST_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      KAFKA_REST_HOST_NAME: kafka-rest
    networks:
      - overlay

  kafka-connect:
    image: psingh4321/hcs-kafka-connect
    hostname: kafka-connect
    depends_on:
      - zookeeper
      - kafka
      - schema-registry
      - kafka-rest
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: 'kafka:9092'
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: compose-connect-group  
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
      CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      CONNECT_LOG4J_ROOT_LOGLEVEL: INFO
    deploy:
      placement:
        constraints:
          - node.role == manager
    networks:
      - overlay

networks:
  overlay: